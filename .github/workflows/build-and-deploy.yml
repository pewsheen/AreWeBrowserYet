name: Build and Deploy
on:
  push:
    branches:
      - exp
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - labeled
  schedule:
    # Re-deploy weekly to automatically track changes
    # - cron: '5 8 * * 6'
  workflow_dispatch:
permissions:
  contents: write
jobs:
  setup-and-deploy:
    permissions: write-all
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: Remove label from PR
        if: github.ref != 'refs/heads/main' && contains(github.event.pull_request.labels.*.name, 'preview-build')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pr_number=${{ github.event.pull_request.number }}
          label_to_remove="preview-build"
          gh pr edit "$pr_number" --remove-label "$label_to_remove"

      - name: Post initial workflow start comment
        if: github.ref != 'refs/heads/main' && contains(github.event.pull_request.labels.*.name, 'preview-build')
        id: comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            :hourglass_flowing_sand: Running build preview for PR.

            <!-- workflow-preview-build-label -->

      - name: Download CSS properties JSON From W3
        run: |
          wget https://www.w3.org/Style/CSS/all-properties.en.json -O ./static/w3-all-properties.json

      - name: Download Servo supported CSS properties
        run: |
          wget https://doc.servo.org/stylo/css-properties.json -O ./static/servo-css-properties.json

      # Need another way of retrieving default Servo preference
      # - name: Download Servo default prefs.json
      #   run: |
      #     wget https://raw.githubusercontent.com/servo/servo/refs/heads/main/resources/prefs.json -O ./static/servo-default-pref.json

      - name: Download Google supported CSS properties
        run: |
          wget https://chromestatus.com/data/csspopularity -O ./static/google-css-popularity.json

      # Prepare MDN BCD collector
      - name: Set LIBCLANG_PATH env
        run: echo "LIBCLANG_PATH=/usr/lib/llvm-14/lib" >> $GITHUB_ENV
      - name: Clone Repository
        uses: actions/checkout@v4
      - name: Clone mdn-bcd-collector
        uses: actions/checkout@v4
        with:
          repository: openwebdocs/mdn-bcd-collector
          submodules: true
          path: collector
      - name: Clone Servo
        uses: actions/checkout@v4
        with:
          repository: servo/servo
          path: servo
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "0.5.6"
      - name: Build Servo
        run: |
          cd servo
          ./mach bootstrap
          ./mach build
      - name: Run MDN bcd collector in background
        run: |
          cd collector
          npm ci
          nohup npm run dev &

          retries=15
          count=0
          until curl -s http://localhost:5200 > /dev/null; do
            if [ $count -ge $retries ]; then
              echo "Server did not start after $retries attempts."
              exit 1
            fi
            echo "Retry $((count + 1))/$retries: Server not ready, retrying in 2 seconds..."
            sleep 2
            count=$((count + 1))
          done

          echo "Server is up!"
      - name: Run test and generate report
        run: |
          cd servo
          # Run the test in headless modeand save the output to a variable
          OUTPUT=$(timeout 10m ./mach run http://localhost:5200/tests/ --headless --userscripts="${{ github.workspace }}/scripts/")

          # Extract the line with "RESULT_FILENAME:" and isolate the filename
          FILENAME=$(echo "$OUTPUT" | grep "RESULT_FILENAME:" | sed 's/RESULT_FILENAME: //')

          echo "Result filename: $FILENAME"

          # Save to environment for later steps
          echo "RESULT_FILENAME=$FILENAME" >> $GITHUB_ENV
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.RESULT_FILENAME }}
          path: ${{ github.workspace }}/collector/download/${{ env.RESULT_FILENAME }}
      - name: Generate Popularity Ranked Result
        run: |
          pnpm install
          pnpm build
          pnpm tag ${{ github.workspace }}/collector/download/${{ env.RESULT_FILENAME }}
          pnpm to-md
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: popularity-ranked-results
          path: ${{ github.workspace }}/popularityBcdMap.*
      # - uses: actions/setup-python@v5
      #   with:
      #     python-version: "3.12"

      # - name: Build CSS Page
      #   run: |
      #     python ./python/build_css.py

      # - name: Build MDN BCD Page
      #   run: |
      #     git clone https://github.com/mdn/browser-compat-data.git
      #     python ./python/build_browser_feature.py ${{ github.workspace }}/collector/download/${{ env.RESULT_FILENAME }}

      # - name: Build Test
      #   if: github.ref != 'refs/heads/main' && !contains(github.event.pull_request.labels.*.name, 'preview-build')
      #   uses: shalzz/zola-deploy-action@v0.20.0
      #   env:
      #     BUILD_ONLY: true
      #     BUILD_FLAGS: --drafts
      # - name: Preview Pull Request
      #   if: github.ref != 'refs/heads/main' && contains(github.event.pull_request.labels.*.name, 'preview-build')
      #   uses: shalzz/zola-deploy-action@v0.20.0
      #   env:
      #     PAGES_BRANCH: pr-preview
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Update comment with completion status
      #   if: github.ref != 'refs/heads/main' && contains(github.event.pull_request.labels.*.name, 'preview-build')
      #   uses: peter-evans/create-or-update-comment@v4
      #   with:
      #     comment-id: ${{ steps.comment.outputs.comment-id }}
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     issue-number: ${{ github.event.pull_request.number }}
      #     body: |
      #       :white_check_mark: PR preview build completed at https://github.com/dklassic/AreWeBrowserYet/tree/pr-preview.
      # - name: Build and deploy
      #   if: github.ref == 'refs/heads/main'
      #   uses: shalzz/zola-deploy-action@v0.20.0
      #   env:
      #     PAGES_BRANCH: gh-pages
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
